version: "3.5"

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=veloxidedb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=thisisnotsecure
    ports:
      - "5432:5432"

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./docker/tempo/tempo.yaml:/etc/tempo.yaml
      - ./docker/tempo/data:/tmp/tempo
    ports:
      - "14268" # jaeger ingest
      - "6831:6831/udp" # Jaeger protocol
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http
      - "3200" # tempo
      - "9411" # zipkin

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./docker/prometheus/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  opa:
    image: openpolicyagent/opa:latest
    ports:
      - "8181:8181"
    volumes:
      - ./policies:/policies
    command:
      [
        "run",
        "--server",
        "--addr=0.0.0.0:8181",
        "--log-level=debug",
        "/policies/authz.rego",
      ]

    # Uncomment to build the backend and frontend as containers using docker
  # frontend:
  #   build:
  #     context: ./frontends/sveltekit/
  #     dockerfile: Dockerfile
  #   environment:
  #     NODE_ENV: production
  #     VITE_GRPC_SERVER_BASE_URL: "http://backend:8000"
  #   ports:
  #     - 5000:3000
  #
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - postgres
  #     - tempo
  #     - opa
  #   environment:
  #     OBSERVABILITY_SERVICE_NAME: "veloxide-server"
  #     OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4317"
  #     RUST_LOG: "info"
  #     DATABASE_URL: "postgresql://postgres:thisisnotsecure@postgres:5432/veloxidedb"
  #     HTTP_PORT: "8080"
  #     TOKEN_KEY: "${TOKEN_KEY}"
  #     TOKEN_DURATION_MINUTES: "1440"
  #     POLICY_SERVER_URL: "http://opa:8181/v1/data/httpapi/authz"
  #     GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
  #     GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
  #     GOOGLE_REDIRECT_URL: "http://localhost:8080/auth/google/callback"
