// @generated by protobuf-ts 2.9.1
// @generated from protobuf file "auth.proto" (package "auth", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Authentication } from "./auth";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetUserResponse } from "./auth";
import type { GetCurrentUserRequest } from "./auth";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service auth.Authentication
 */
export interface IAuthenticationClient {
    /**
     * @generated from protobuf rpc: GetCurrentUser(auth.GetCurrentUserRequest) returns (auth.GetUserResponse);
     */
    getCurrentUser(input: GetCurrentUserRequest, options?: RpcOptions): UnaryCall<GetCurrentUserRequest, GetUserResponse>;
}
/**
 * @generated from protobuf service auth.Authentication
 */
export class AuthenticationClient implements IAuthenticationClient, ServiceInfo {
    typeName = Authentication.typeName;
    methods = Authentication.methods;
    options = Authentication.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetCurrentUser(auth.GetCurrentUserRequest) returns (auth.GetUserResponse);
     */
    getCurrentUser(input: GetCurrentUserRequest, options?: RpcOptions): UnaryCall<GetCurrentUserRequest, GetUserResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetCurrentUserRequest, GetUserResponse>("unary", this._transport, method, opt, input);
    }
}
