[package]
name = "veloxide-server"
description = "Veloxide: Example Bank Account API"
default-run = "veloxide-server"
version = "0.1.0"
edition = "2021"
license = "MIT"
authors = ["Liam Woodleigh-Hardinge <liam.woodleigh@gmail.com>"]

[dependencies]
# Web / Async
axum = { version = "~0", features = ["macros"] }
hyper = { version = "~0", features = ["full"] }
tokio = { version = "~1", features = ["full"] }
tower = "~0.4"
axum-prometheus = "~0.4"
async-trait = "~0.1"
tower-http = { version = "~0.4", features = ["cors"] }

## gRPC
tonic = "0.9"
tonic-web = "0.9"
prost = "0.11"
futures = "0.3"
axum_tonic = { git = "https://github.com/liamwh/axum-tonic.git" }

# OpenAPI
utoipa = { version = "~3", features = ["axum_extras"], optional = true }
utoipa-swagger-ui = { version = "~3", features = ["axum"], optional = true }

## GraphQL
async-graphql = { version = "~5", optional = true, features = ["playground"] }
async-graphql-axum = { version = "~5", optional = true }

# Serialization
serde = { version = "~1", features = ["derive"] }
serde_json = "~1"
serde_yaml = "~0"
serde_with = { version = "~3.2", features = ["chrono"] }
serde_with_macros = "3.2.0"
uuid = { version = "~1.4", features = ["v4", "serde"] }

# Persistence
sqlx = { version = "~0.7", features = [
    "runtime-tokio-rustls",
    "sqlite",
    "chrono",
    "postgres",
    "mysql",
    "json",
    "uuid",
] }

# Observability
tracing = { version = "~0", features = ["log", "log-always"] }
opentelemetry = { version = "0.18.0", features = ["rt-tokio"], optional = true }
opentelemetry-otlp = { version = "0.11.0", features = [
    "tokio",
    "metrics",
], optional = true }
tracing-subscriber = { version = "~0.3", optional = true, features = [
    "env-filter",
    "std",
] }
tracing-opentelemetry = { version = "~0.18", optional = true }
tracing-log = { version = "~0.1", optional = true, features = ["env_logger"] }
tracing-bunyan-formatter = { version = "~0.3", optional = true }
log = "~0.4"

# Frontend
ts-rs = { version = "~7.0", optional = true }

# Event sourcing
cqrs-es = "~0"
mysql-es = { version = "~0", optional = true }
postgres-es = { version = "~0", optional = true }

# Auth
oauth2 = "~4"
url = "~2"
const_format = "~0"
tower-cookies = "~0"
email_address = "0.2.4"
reqwest = { version = "0.11.18", features = ["json"] }
base64 = "0.21.2"
hmac = "0.12.1"
sha2 = "0.10.7"

# Time
time = "0.3.25"
chrono = "~0"

# Error handling
color-eyre = "0.6.2"
thiserror = "~1"

# Misc
dotenvy = "~0"
derivative = "~2"
cfg-if = "~1"

[features]
default = ["tracing", "graphql", "frontend", "postgres", "openapi", "bunyan"]
mysql = ["mysql-es", "sqlx/mysql"]
postgres = ["postgres-es", "sqlx/postgres"]
tracing = [
    "tracing-log",
    "tracing-subscriber",
    "tracing-opentelemetry",
    "opentelemetry",
    "opentelemetry-otlp",
]
graphql = ["async-graphql", "async-graphql-axum"]
frontend = ["ts-rs"]
openapi = ["utoipa", "utoipa-swagger-ui"]
bunyan = ["tracing-bunyan-formatter"]

[dev-dependencies]
pretty_assertions = "~1"
cucumber = "~0"
mockall = { version = "~0" }
coverage-helper = "~0"

[[test]]
name = "cucumber" # this should be the same as the filename of the test target
harness = false   # allows Cucumber to print output instead of libtest

[build-dependencies]
tonic-build = "0.9"
